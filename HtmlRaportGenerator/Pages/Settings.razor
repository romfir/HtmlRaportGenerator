@attribute [RouteAttribute("/" + RelativePageUrls.Settings)]

@inject MonthStateService stateService
@inject AuthenticationStateProvider authenticationStateProvider

<Row Margin="Margin.Is4.FromTop">
    <Column ColumnSize="ColumnSize.IsAuto" Margin="Margin.IsAuto">
        <Field Horizontal="true">
            <FieldLabel ColumnSize="ColumnSize.IsAuto">Data Store</FieldLabel>
            <FieldBody ColumnSize="ColumnSize.IsAuto">
                <Select TValue="DataStore" @bind-SelectedValue="SelectedStorage">
                    <SelectItem Value="DataStore.LocalStorage">@DataStore.LocalStorage</SelectItem>
                    <SelectItem Value="DataStore.GoogleDrive" Disabled="(!_isUserAuthenticated)">@DataStore.GoogleDrive</SelectItem>
                </Select>
            </FieldBody>
        </Field>
    </Column>
</Row>

@code {
    private bool _isUserAuthenticated;

    private DataStore SelectedStorage
    {
        get => stateService.CurrentDataStore;
#pragma warning disable CS4014
        set => stateService.ChangeDataStoreAsync(value);
#pragma warning restore CS4014
    }

    protected override async Task OnInitializedAsync()
    {
        Task loadConfigAsync = stateService.LoadConfigurationIfEmptyAsync();

        Task<AuthenticationState> getAuthenticationAsync = authenticationStateProvider.GetAuthenticationStateAsync();

        await loadConfigAsync.ConfigureAwait(false);
        AuthenticationState state = await getAuthenticationAsync.ConfigureAwait(false);

        _isUserAuthenticated = state.User.Identity?.IsAuthenticated is true;
    }
}
